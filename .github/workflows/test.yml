name: Run Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Setup Node.js
      uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Run linting
      working-directory: ./frontend
      run: npm run lint

    - name: Run type checking
      working-directory: ./frontend
      run: npm run typecheck

    - name: Run tests
      working-directory: ./frontend
      run: npm run test

    - name: Run build
      working-directory: ./frontend
      run: npm run build

  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

    - name: Setup Python
      uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
      with:
        python-version: '3.11'

    - name: Install UV
      uses: astral-sh/setup-uv@77c28f02b3322332d4a4446b3177f426da8bf086 # v4.0.0
      with:
        enable-cache: true

    - name: Install dependencies
      working-directory: ./backend
      run: uv sync

    - name: Start database with Docker Compose
      run: docker-compose up -d db

    - name: Wait for database to be ready
      run: |
        timeout 60 bash -c 'until docker-compose exec -T db pg_isready -U postgres; do sleep 2; done'

    - name: Run linting
      working-directory: ./backend
      run: uv run ruff check .

    - name: Run tests
      working-directory: ./backend
      env:
        DATABASE_URL: postgresql://postgres:password@localhost:5432/meal_planner
        SECRET_KEY: test_secret_key_for_ci
        ANTHROPIC_API_KEY: test_api_key
      run: uv run pytest -v --tb=short -m "not slow and not integration"

    - name: Stop Docker Compose services
      if: always()
      run: docker-compose down

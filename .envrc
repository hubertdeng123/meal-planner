# Load environment variables
dotenv_if_exists .env

# Set up Python environment for backend
if [[ -f backend/.venv/bin/activate ]]; then
  source backend/.venv/bin/activate
else
  echo "Creating Python virtual environment with uv..."
  cd backend && uv venv && cd ..
  source backend/.venv/bin/activate
  cd backend && uv sync && cd ..
fi

# Set up Node.js environment for frontend
layout node

# Add PostgreSQL to PATH if available
if [[ -d "/opt/homebrew/opt/postgresql@16/bin" ]]; then
  export PATH="/opt/homebrew/opt/postgresql@16/bin:$PATH"
fi

# Export common development variables
export PYTHONPATH="${PYTHONPATH}:${PWD}/backend"
export NODE_ENV="development"

# Backend helpers
backend_start() {
  echo "Starting FastAPI backend..."
  cd backend && uv run uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
}

frontend_start() {
  echo "Starting React frontend..."
  cd frontend && pnpm run dev
}

# Database helpers
db_migrate() {
  echo "Running database migrations..."
  cd backend && uv run alembic upgrade head && cd ..
}

db_reset() {
  echo "Resetting database..."
  dropdb meal_planner --if-exists
  createdb meal_planner
  cd backend && uv run alembic upgrade head && cd ..
}

# Development helpers
dev_start() {
  echo "Starting both backend and frontend..."
  make dev
}

backend_format() {
  echo "Formatting backend code..."
  cd backend && uv run ruff check --fix . && uv run ruff format . && cd ..
}

frontend_format() {
  echo "Formatting frontend code..."
  cd frontend && pnpm prettier --write . && cd ..
}

# Component generator
generate_component() {
  local name=$1
  if [[ -z "$name" ]]; then
    echo "Usage: generate_component ComponentName"
    return 1
  fi

  local dir="frontend/src/components"
  local file="$dir/${name}.tsx"

  if [[ -f "$file" ]]; then
    echo "Component $name already exists!"
    return 1
  fi

  cat > "$file" << EOF
interface ${name}Props {
  // Add props here
}

export default function ${name}({ }: ${name}Props) {
  return (
    <div>
      <h1>${name}</h1>
    </div>
  );
}
EOF

  echo "Created component: $file"
}

echo "🍽️  Meal Planner environment loaded!"
echo "Available commands:"
echo "  🚀 dev_start         : Start both backend and frontend"
echo "  🐍 backend_start     : Start FastAPI backend only"
echo "  ⚛️  frontend_start    : Start React frontend only"
echo "  🗄️  db_migrate       : Run database migrations"
echo "  🔄 db_reset         : Reset and recreate database"
echo "  ✨ backend_format   : Format backend code with ruff"
echo "  💅 frontend_format  : Format frontend code with prettier"
echo "  🧩 generate_component: Generate new React component"
